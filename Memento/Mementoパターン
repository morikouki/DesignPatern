Mementoパターン

【状態を保存する】

テキストエディタを使っているとき、必要なテキストを誤って削除してしまっても、アンドゥ（やり直し）という機能を使えば、
削除する前の状態にテキストを復元することができる。
アンドゥを何段階も行って、編集作業をどんどん過去に遡れるエディタもある。
オブジェクト指向のプログラムでアンドゥを行うには、インスタンスの持っている情報を保存しておく必要がある。
ただし、保存しておくだけではダメで、保存しておいた情報からインスタンスを元の状態に戻せなければならない。
インスタンスを復元するためには、インスタンス内部の情報に自由にアクセスできる必要がある。
しかし、不用意にアクセスを許してしまうと、そのクラスの内部構造に依存したコードがプログラムの阿知ことに散らばり、
クラスの修正がしにくくなってしまう。これをカプセル化の破壊という。
インスタンスの状態を表す役割を導入して、カプセル化の破壊に陥ることなく保存と復元を行うのが、
Mementoパターン　だ。
このパターンを利用すると、プログラムに対し、
・undo（やり直し）
・redo（再実行）
・history（作業履歴の作成）
・snapshot（現在の状態の保存）
などを行うことができる。

mementoは、「記念品」「形見」「思い出の種」という意味です。
「思い出の写真」が、引き出しの奥からぽろっと出てきたとする。
懐かしい写真を見ると、その頃の記憶がどっと甦ってきて、まるでその時代に戻ったかのような気持ちになる。
Mementoパターンは、ちょうどそのようなデザインパターンで、ある時点でのインスタンスの状態を記録して保存しておき、
後でインスタンスをその時点の状態に戻してやるのだ。

サンプルプログラムは、
「フルーツを集めていくサイコロゲーム」を作成している。ルールは単純で、
・このゲームは自動的に進む
・ゲームの主人公はサイコロを振り、その目が次の状態を決定する
・いい芽が出ると主人公のお金が増える
・悪い目が出るとお金が減る
・特にいい目が出ると、主人公はフルーツをもらう
・お金がなくなったら終了する
プログラムの中では、お金が貯まったところで、将来のためにMementoクラスのインスタンスを作って、
「現在の状態」を保持する。保存するのは現在持っているお金とフルーツ。
もしも負け続けてお金が減ってきたら、お金がなくなって終了しないように、以前保存しておいたMementoのインスタンスを使って、以前の状態を復元する。

Mementoパターンの登場人物
・Originator（作成者）の役
Originator役は、自分の現在の状態を保存したいときにMemento役を作る
Originator役はまた、以前のMemento役を渡されると、そのMemento役を作った時点の状態に戻る処理を行う
サンプルプログラムでは、Gamerクラスがこの役を務める。

・Memento（記念品）の役
Memento役は、Originator役の内部情報をまとめる。
Memento役は、Originator役の内部情報を持っているが、その情報を誰にでも公開するわけではない。
Memento役は、次の2種類のインタフェースを持っている。
 wide interface 広いインタフェース
 Memento役が提供する「広いインタフェース」は、オブジェクトの状態をもとに戻すために必要な情報が全て得られるメソッドの集合。
 広いインタフェースはMementoあy句の内部状態を曝け出してしまうので、これを使えるのはOriginator役からだけ。

 narrow interface 狭いインタフェース
 「狭いインタフェース」は、外部のCaretaker役に見せるもの。
 こいつにできることには限りがあり、内部状態が外部に公開されるのを防ぐ。
この2つのインタフェースを使い分けることで、オブジェクトのカプセル化の破壊を防ぐ。
サンプルプログラムでは、Mementoクラスがこの役を務める。

・Caretaker（世話をする人）の役
Caretaker役は、現在のOriginator役の状態を保存したいときん、そのことをOriginator役に伝える。
Originator役はそれを受けてMemento役を作り、Caretaker役に渡す。
Caretaker役は将来の必要に備えて、そのMemento役を保存しておく。
サンプルプログラムでは、Mainクラスがこの役と務める。
しかし、Caretaker役は、Memento役の持つ2種類のインタフェースのうち、「狭いインタフェース」しか使えないので、
Memento役の内部情報にアクセスできるわけではない。
ただ、作ってもらったMemento役を、ひとかたまりのブラックボックスとして、丸ごと保存しておくだけ。
Originator役とMemento役は固く結びついているが、Caretaker役とMemento役は緩やかに結びついている。
Memento役はCaretaker役に対して情報隠蔽をおこなっている。
